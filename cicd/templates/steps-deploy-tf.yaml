steps:
- task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@1
  displayName: "Install Terraform"
  inputs:
    terraformVersion: 1.9.2

- task: replacetokens@6 
  inputs:
    root: '$(System.DefaultWorkingDirectory)/deploy/terraform' 
    sources : '**/*.tfvars' 
    addBOM: true 
    tokenPattern: 'doubleunderscores'
    logLevel: 'warn'
    ifNoFilesFound: 'warn' 
    telemetryOptout: true 

- task: TerraformCLI@2 
  displayName: "Terraform init"
  inputs:
    backendType: 'aws'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/deploy/terraform'
    backendServiceAws: $(awsConnection)
    backendAwsRegion: $(region)
    backendAwsBucket: '$(backendBucket)'
    backendAwsKey: 'tf/$(environment).tfstate'
    allowTelemetryCollection: true
    

- task: TerraformCLI@2 
  displayName: 'Terraform plan'
  inputs:
    command: 'plan'
    providerServiceAws: $(awsConnection)
    workingDirectory: '$(System.DefaultWorkingDirectory)/deploy/terraform'
    commandOptions: '-var-file=vars.tfvars --out=$(environment).tfplan'
    publishPlanResults: 'plan'
    providerAwsRegion: $(region)
    allowTelemetryCollection: true

- task: TerraformCLI@2
  displayName: 'Terraform apply'
  inputs:
    command: 'apply'
    providerServiceAws: $(awsConnection)
    workingDirectory: '$(System.DefaultWorkingDirectory)/deploy/terraform'
    commandOptions: '-auto-approve $(environment).tfplan'
    allowTelemetryCollection: true
    providerAwsRegion: $(region)

